import numpy as np
import matplotlib.pyplot as plt
Alphabet=Alphabet=['а', 'б', 'в', 'г', 'ґ', 'д', 'е', 'є', 'ж', 'з', 'и', 'і', 'ї', 'й', 'к', 'л', 'м', 'н', 'о', 'п', 'р', 'с', 'т', 'у', 'ф', 'х', 'ц', 'ч', 'ш', 'щ', 'ь', 'ю', 'я']

dict_letter={}


for i in range (len (Alphabet)):#створюємо ловники: перший - якій букві відповідає який номер, другий - навпаки, якому номеру відповідає яка буква
    dict_letter.update({Alphabet[i]:0})



n=(len(Alphabet))#запам'ятовуємо, скільки всього букв в алфавіті
def calculate_freequency(text):#функція для шифрування повідомлення
    text=text.lower()#переводемо всі літери в маленькі
    

    #фільтруємо текст і ключ від зайіих символів, яких нема в алфавіті
    text_filtered=''
    
    for i in text:
        if i in Alphabet:
            text_filtered+=i

    n1=len(text_filtered)#кількість літер в відфільтрованому тексті
    if n1!=0:#якщо в текстіє хоч одна літера, рахуємо частоту
        for i in text_filtered:#для кожної літери, як тільки її зустрічаємо,  збільшуємо її частоту на 1/n1
           dict_letter[i]+=1/n1
           
        
   

    fig, ax = plt.subplots()
    print(dict_letter.values())
    ax.bar(dict_letter.keys(), dict_letter.values())
    plt.show()

calculate_freequency("Криптогра́фія (від грецького — прихований і  — писати) — наука про математичні методи забезпечення конфіденційності, цілісності і автентичності інформації. Розвинулась з практичної потреби передавати важливі відомості найнадійнішим чином. Для математичного аналізу криптографія використовує інструментарій абстрактної алгебри та теорії ймовірностей.")
